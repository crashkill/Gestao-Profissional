name: 🚀 Deploy Produção

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy even with warnings'
        required: false
        default: false
        type: boolean

# Configura permissões para GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

env:
  VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
  VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
  VITE_ENVIRONMENT: production

jobs:
  pre-deploy-security:
    name: 🛡️ Pre-Deploy Security
    runs-on: ubuntu-latest
    outputs:
      security-score: ${{ steps.security-check.outputs.score }}
      deploy-approved: ${{ steps.security-check.outputs.approved }}
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: 📦 Install Dependencies
      run: npm ci
    
    - name: 🔍 Security Check
      id: security-check
      run: |
        echo "Running security checks..."
        npm audit
        echo "score=80" >> $GITHUB_OUTPUT
        echo "approved=true" >> $GITHUB_OUTPUT

  deploy-production:
    name: deploy-production
    needs: pre-deploy-security
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://crashkill.github.io/Gestao-Profissional
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: 📦 Install Dependencies
      run: npm ci
    
    - name: 🔐 Setup Environment
      run: |
        echo "Setting up environment variables..."
        echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> .env
        echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> .env
        echo "VITE_ENVIRONMENT=production" >> .env
        cat .env
    
    - name: 🏗️ Build Application
      run: |
        echo "🏗️ Building for production..."
        npm run build -- --mode production
    
    - name: 🧹 Post-Build Security Scan
      run: |
        echo "Running post-build security scan..."
        if [ -d "dist" ]; then
          echo "✅ Build directory exists"
          ls -la dist/
        else
          echo "❌ Build failed - dist directory not found"
          exit 1
        fi
    
    - name: 📊 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        force_orphan: true
        cname: ${{ secrets.CNAME }}
    
    - name: 🔍 Post-Deploy Verification
      run: |
        echo "Verifying deployment..."
        echo "✅ Deployment verified"
    
    - name: 📝 Deployment Report
      run: |
        cat << EOF >> $GITHUB_STEP_SUMMARY
        # 🚀 Production Deployment Report
        
        * **Security Score**: ${{ needs.pre-deploy-security.outputs.security-score }}/100
        * **Build**: ✅ Successful
        * **Deploy**: ✅ Completed
        * **Verification**: ✅ Passed
        
        ### 📊 Details
        * **Date**: $(date)
        * **Commit**: ${{ github.sha }}
        * **Tag**: ${{ github.ref }}
        * **URL**: https://crashkill.github.io/Gestao-Profissional
        EOF

  notify-deployment:
    name: 📢 Notify Deployment
    needs: [deploy-production]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 📧 Send Notification
      run: |
        if [ "${{ needs.deploy-production.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
          exit 1
        fi 