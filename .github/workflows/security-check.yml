name: 🛡️ Security Check

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
  schedule:
    # Run security check every day at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  security-scan:
    name: 🔍 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Get full history for secret scanning
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: 📦 Install Dependencies
      run: npm ci
    
    - name: 🔍 Secret Scanning
      run: |
        echo "🔍 Scanning for exposed secrets..."
        npm run secure:scan
        if [ $? -ne 0 ]; then
          echo "❌ Secret scan failed!"
          exit 1
        fi
    
    - name: ✅ Environment Check
      run: |
        echo "✅ Checking environment variables usage..."
        npm run secure:check
    
    - name: 🧪 Security Validation
      run: |
        echo "🧪 Running security validation..."
        npm run secure:validate
    
    - name: 📊 Dependency Audit
      run: |
        echo "📊 Running dependency audit..."
        npm run secure:audit --audit-level=moderate
        if [ $? -ne 0 ]; then
          echo "⚠️ High/Critical vulnerabilities found!"
          echo "Please run 'npm audit fix' to resolve issues"
          # Don't fail the build for audit issues, just warn
        fi
    
    - name: 🏗️ Build Test
      run: |
        echo "🏗️ Testing build process..."
        npm run build
        if [ $? -ne 0 ]; then
          echo "❌ Build failed!"
          exit 1
        fi
    
    - name: 🧹 Post-Build Security Check
      run: |
        echo "🧹 Checking build artifacts..."
        if [ -d "dist" ]; then
          # Check if build artifacts contain any secrets
          grep -r "eyJ[A-Za-z0-9_-]*" dist/ && echo "❌ JWT found in build!" && exit 1 || echo "✅ No secrets in build"
          grep -r "sk-[a-zA-Z0-9]" dist/ && echo "❌ API key found in build!" && exit 1 || echo "✅ No API keys in build"
        fi
    
    - name: 📈 Security Score
      run: |
        echo "📈 Calculating security score..."
        SCORE=$(npm run secure:validate 2>&1 | grep -o "🎯 Pontuação de Segurança: [0-9]*/100" | grep -o "[0-9]*" | head -1)
        echo "Security Score: $SCORE/100"
        if [ "$SCORE" -lt 80 ]; then
          echo "❌ Security score too low: $SCORE/100"
          echo "Minimum required score: 80/100"
          exit 1
        fi
        echo "✅ Security score acceptable: $SCORE/100"
    
    - name: 📝 Security Report
      if: always()
      run: |
        echo "📝 Generating security report..."
        echo "## 🛡️ Security Check Report" >> $GITHUB_STEP_SUMMARY
        echo "- **Secret Scan**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment Check**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Test**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependency Audit**: ⚠️ Check logs" >> $GITHUB_STEP_SUMMARY
        echo "- **Security Score**: $(npm run secure:validate 2>&1 | grep -o '[0-9]*/100' | head -1)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Details" >> $GITHUB_STEP_SUMMARY
        echo "Date: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY 