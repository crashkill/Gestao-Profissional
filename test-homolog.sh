#!/bin/bash
# Script para testar o ambiente de homologa√ß√£o

set -e  # Parar em caso de erro

# Configura√ß√µes do Projeto de Homologa√ß√£o
HOMOLOG_URL="https://zbiivgtdamejiwcabmcv.supabase.co"

# Obter chaves do Doppler
HOMOLOG_ANON_KEY=$(doppler secrets get VITE_SUPABASE_ANON_KEY --plain)
HOMOLOG_SERVICE_KEY=$(doppler secrets get SUPABASE_HOMOLOG_SERVICE_KEY --plain)

echo "üß™ Testando ambiente de homologa√ß√£o"
echo "======================================================="
echo "üîó URL: $HOMOLOG_URL"
echo "======================================================="

# Verificar se as chaves est√£o configuradas
if [ -z "$HOMOLOG_ANON_KEY" ] || [ -z "$HOMOLOG_SERVICE_KEY" ]; then
    echo "‚ùå ERRO: Chaves n√£o configuradas!"
    exit 1
fi

# Testar com chave de servi√ßo (acesso total)
echo "\nüîë Testando com chave de servi√ßo..."
SERVICE_COUNT=$(curl -s "$HOMOLOG_URL/rest/v1/colaboradores?select=count" \
    -H "apikey: $HOMOLOG_SERVICE_KEY" \
    -H "Authorization: Bearer $HOMOLOG_SERVICE_KEY" | jq -r '.[0].count // 0')

echo "üìä Registros em Homologa√ß√£o (chave de servi√ßo): $SERVICE_COUNT"

# Testar com chave an√¥nima (acesso p√∫blico)
echo "\nüîë Testando com chave an√¥nima..."
ANON_COUNT=$(curl -s "$HOMOLOG_URL/rest/v1/colaboradores?select=count" \
    -H "apikey: $HOMOLOG_ANON_KEY" \
    -H "Authorization: Bearer $HOMOLOG_ANON_KEY" | jq -r '.[0].count // 0')

echo "üìä Registros em Homologa√ß√£o (chave an√¥nima): $ANON_COUNT"

# Verificar alguns registros
echo "\nüìã Verificando alguns registros..."
curl -s "$HOMOLOG_URL/rest/v1/colaboradores?select=id,nome_completo,email&limit=3" \
    -H "apikey: $HOMOLOG_SERVICE_KEY" \
    -H "Authorization: Bearer $HOMOLOG_SERVICE_KEY" | jq

echo "\n‚úÖ Teste conclu√≠do!"